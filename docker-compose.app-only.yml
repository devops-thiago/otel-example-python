services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: otel_example
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=appuser
      - DB_PASSWORD=apppassword
      - DB_NAME=otel_example
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - APP_ENV=production
      - LOG_LEVEL=info
      # OpenTelemetry Configuration - Point to your own collector
      - OTEL_SERVICE_NAME=otel-example-python-api
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_ENVIRONMENT=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-otel-collector:4317}
      - OTEL_ENABLE_METRICS=true
      - OTEL_ENABLE_TRACING=true
      - OTEL_ENABLE_LOGGING=true
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge